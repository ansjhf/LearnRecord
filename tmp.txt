import com.alibaba.excel.EasyExcel;
import com.alibaba.excel.context.AnalysisContext;
import com.alibaba.excel.event.AnalysisEventListener;

import java.util.*;
import java.util.function.Consumer;

public class ExcelBatchReader {

    public static void readExcelByBatch(String filePath, int batchSize,
                                        Consumer<List<String>> onHeader,
                                        Consumer<List<List<String>>> onBatch) {
        EasyExcel.read(filePath, new AnalysisEventListener<Map<Integer, String>>() {

            private List<String> header = new ArrayList<>();
            private boolean isHeaderParsed = false;

            private List<List<String>> buffer = new ArrayList<>();

            @Override
            public void invoke(Map<Integer, String> data, AnalysisContext context) {
                if (!isHeaderParsed) {
                    // 读取第一行作为表头
                    for (int i = 0; i < data.size(); i++) {
                        header.add(data.getOrDefault(i, ""));
                    }
                    isHeaderParsed = true;
                    onHeader.accept(header);
                    return;
                }

                // 读取数据行
                List<String> row = new ArrayList<>();
                for (int i = 0; i < header.size(); i++) {
                    row.add(data.getOrDefault(i, ""));
                }
                buffer.add(row);

                if (buffer.size() >= batchSize) {
                    onBatch.accept(new ArrayList<>(buffer));
                    buffer.clear();
                }
            }

            @Override
            public void doAfterAllAnalysed(AnalysisContext context) {
                if (!buffer.isEmpty()) {
                    onBatch.accept(new ArrayList<>(buffer));
                }
            }

        })
        .headRowNumber(0)
        .sheet()
        .doRead();
    }

    // 示例用法
    public static void main(String[] args) {
        readExcelByBatch("test.xlsx", 1000,
            header -> System.out.println("字段名：" + header),
            batch -> System.out.println("批次数据量：" + batch.size())
        );
    }
}